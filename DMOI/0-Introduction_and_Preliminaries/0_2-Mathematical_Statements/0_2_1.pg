
## DBsubject('Set theory and logic')
## DBchapter('Propositional logic')
## DBsection('Operations on propositions')
## Level()
## KEYWORDS()
## TitleText1('Discrete Mathematics: an Open Introduction')
## EditionText1('3')
## AuthorText1('Oscar Levin')
## Section1(0.2)
## Problem1(1)
## Author('Oscar Levin')
## Institution('University of Northern Colorado')
## Language(en-US)

DOCUMENT();

####################
# Load Macros
####################
loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
);

####################
# Header
####################
COMMENT('Randomized');
TEXT(beginproblem());

####################
# PG Setup
####################
# Create and use pop up lists 
$tf = new_pop_up_select_list();
# Specify choices presented to students
$tf -> ra_pop_up_list([No_answer => "?", 
    "atomic" => "atomic statement", 
    "molecular" => "molecular statement",
    "none" => "not a statement"] );

# Questions and answers
$seed = random(1,9);

if ( $seed == 1  ) {
    $tf -> qa(
        "Eat your vegetables!", "none",
        "Sally ate her vegetables.", "atomic",
        "Sally ate her vegetables and got a cookie.", "molecular",
    );
} elsif ( $seed == 2 ){
    $tf -> qa(
        "Would you like fries with that?", "none",
        "The meal comes with fries", "atomic",
        "If you order the burger, you also get fries.", "molecular",
    );
} elsif ( $seed == 3 ){
    $tf -> qa(
        "Watch out!", "none",
        "There is a scary clown behind you.", "atomic",
        "There is a scary clown behind you and he is juggling.", "molecular",
    );
} elsif ( $seed == 4 ){
    $tf -> qa(
        "Who doesn't love bow ties?", "none",
        "Everyone loves bow ties.", "atomic",
        "Everyone loves bow ties and everyone loves bow tie pasta.", "molecular",
    );
} elsif ( $seed == 5 ){
    $tf -> qa(
        "Can you hear me now?", "none",
        "You are breaking up.", "atomic",
        "If we get disconnected, you can always text me.", "molecular",
    );
} elsif ( $seed == 6 ){
    $tf -> qa(
        "Closing time!", "none",
        "Every new beginning comes from some other beginning's end.", "atomic",
        "You don't have to go home but you can't stay here.", "molecular",
    );
} elsif ( $seed == 7 ){
    $tf -> qa(
        "Learn to swim.", "none",
        # "Fret for your figure and fret for your latte.", "none",
        "Mom's coming 'round to put it back the way it ought to be.", "atomic",
        "Some say the end is near and some say we'll see Armageddon soon.", "molecular",
    );
} elsif ( $seed == 8 ){
    $tf -> qa(
        "Let's rock!", "none",
        "It was a rock lobster.", "atomic",
        "We were at a party and his ear lobe fell in the deep.", "molecular",
    );
} elsif ( $seed == 9 ){
    $tf -> qa(
        "Don't tell me you're too blind to see.", "none",
        "I'm never gonna give you up.", "atomic",
        "You know the rules and so do I.", "molecular",
    );
} else {
        $tf -> qa(
        "Run, run, and fast as you can.", "none",
        "You can't catch me.", "atomic",
        "I ran from the baker and his wife too.", "molecular",
    );
};

# randomily select some number of items
$tf -> choose(3);


####################
# Body
####################
BEGIN_TEXT
For each sentence below, decide whether it is an atomic statement, a molecular statement, or not a statement at all.

$BR
\{ $tf -> print_q \}

END_TEXT

ANS(str_cmp( $tf->ra_correct_ans )   ) ;

####################
# End Problem
####################
ENDDOCUMENT();
