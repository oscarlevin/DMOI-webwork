## DESCRIPTION
##   Recurrence Relations
## ENDDESCRIPTION

## Tagged by nhamblet

## DBsubject(Combinatorics)
## DBchapter(Recurrence relations)
## DBsection(Concepts)
## Institution(Rochester)
## Level(4)
## TitleText1('Discrete Mathematics')
## AuthorText1('Rosen')
## EditionText1('4')
## Section1('5.1')
## Problem1('56')
## KEYWORDS('Recurrence Relation')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;

$a[0] = 1;
$b[0] = 1;
$r1 = random(1,3,1);
$diff[0] = $r1;
$r2 = random(2,4,1);
$diff1[0] = 1;

for($i = 0; $i < 7; $i ++) {
	$diff[$i+1] = 2+$diff[$i];
	$a[$i+1] = $a[$i]+$diff[$i];
	$diff1[$i+1] = $r2*$diff1[$i];
	$b[$i+1] = $diff1[$i]+$b[$i];
} 


# $diff1[0]
# $diff1[1] 

# Modified by O Levin 8/31/19
BEGIN_TEXT

Find the sequences of difference for those sequences given below.  For example, for the sequence

\( a_n : 1,3,9,27,81, \dots \), you would find the sequence of first differences as \( a_n : 2,6,18,54, \dots \).
$BR
$BR

\( b_n : $a[0], $a[1], $a[2], $a[3], $a[4], $a[5],  \dots \) $BR
First differences: \{ ans_rule(1) \},\{ ans_rule(1) \},\{ ans_rule(1) \}, \{ ans_rule(1) \}, \{ ans_rule(1) \} $BR
$BR
\( c_n : $b[0], $b[1], $b[2], $b[3], $b[4], $b[5],  \dots \) $BR
First differences: \{ans_rule(1) \},\{ ans_rule(1) \},\{ ans_rule(1) \}, \{ans_rule(1) \}, \{ ans_rule(1) \} $BR
$PAR
$BR

\(d_n: 0,1,3,6,10,15,21,\dots, \) $BR
First differences:
\{ans_rule(1) \},\{ans_rule(1) \},\{ans_rule(1) \},\{ans_rule(1) \},
\{ans_rule(1) \} $BR
Second differences:
\{ans_rule(1) \},\{ans_rule(1) \},\{ans_rule(1) \},\{ans_rule(1) \},
\{ans_rule(1) \} $BR

END_TEXT

ANS(num_cmp( $diff[0] ) );
ANS(num_cmp( $diff[1] ) );
ANS(num_cmp( $diff[2] ) );
ANS(num_cmp( $diff[3] ) );
ANS(num_cmp( $diff[4] ) );
ANS(num_cmp( $diff1[0] ) );
ANS(num_cmp( $diff1[1] ) );
ANS(num_cmp( $diff1[2] ) );
ANS(num_cmp( $diff1[3] ) );
ANS(num_cmp( $diff1[4] ) );
ANS(num_cmp( 1 ) );
ANS(num_cmp( 2 ) );
ANS(num_cmp( 3 ) );
ANS(num_cmp( 4 ) );
ANS(num_cmp( 5 ) );
ANS(num_cmp( 1 ) );
ANS(num_cmp( 1 ) );
ANS(num_cmp( 1 ) );
ANS(num_cmp( 1 ) );
ANS(num_cmp( 1 ) );


ENDDOCUMENT();        # This should be the last executable line in the problem.;