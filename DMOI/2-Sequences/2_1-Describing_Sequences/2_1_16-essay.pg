#######################################
###    Generated from PreTeXt source   
###    on 2019-03-11T13:50:34-06:00    
###                                    
###      https://pretextbook.org       
###                                    
#######################################
## DBsubject()
## DBchapter()
## DBsection()
## Level()
## KEYWORDS()
## TitleText1(Discrete Mathematics)
## EditionText1()
## AuthorText1(Oscar Levin)
## Section1(not reported)
## Problem1(3.1.16)
## Author()
## Institution()
## Language(en-US)

DOCUMENT();

############################################################
# Load Macros
############################################################
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "AnswerFormatHelp.pl",
  "PGessaymacros.pl",
  "PGcourse.pl",
);

############################################################
# Header
############################################################
COMMENT('Authored in PreTeXt');
TEXT(beginproblem());

############################################################
# PG Setup
############################################################
Context('Numeric');

############################################################
# Body
############################################################

BEGIN_PGML
A ternary string is a sequence of 0's, 1's and 2's.  Just like a bit string, but with three symbols.

Let's call a ternary string _good_ provided it never contains a 2 followed immediately by a 0.  Let [`G_n`] be the number of good strings of length [`n\text{.}`]  For example, [`G_1 = 3\text{,}`] and [`G_2 = 8`] (since of the 9 ternary strings of length 2, only one is not good).

Find, with justification, a recursive formula for [`G_n\text{,}`] and use it to compute [`G_5\text{.}`]

[@ANS(essay_cmp); essay_box(6,76)@]* [@essay_help()@]*

END_PGML

############################################################
# Hint
############################################################
#Set value of $showHint in PGcourse.pl for course-wide attempt threshhold for revealing hints

BEGIN_PGML_HINT
Consider three cases: the last digit is a 0, a 1, or a 2.  Two of these should be easy to count, but strings ending in 0 cannot be proceeded by a 2, so require a little more work.

END_PGML_HINT

############################################################
# End Problem
############################################################

ENDDOCUMENT();
