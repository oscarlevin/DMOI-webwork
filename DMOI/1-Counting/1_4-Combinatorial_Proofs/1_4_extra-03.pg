## DBsubject(Combinatorics)
## DBchapter(Coutning)
## DBsection(Combinations)
## Level(4)
## KEYWORDS('counting','proof','combinatorial proof')
## Institution(University of Northern Colorado)
## Author(Oscar Levin)
## TitleText1(Discrete Mathematics: an Open Introduction)
## AuthorText1(Oscar Levin)
## EditionText1(3)
## Section1(1.4)
## Problem1()

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGchoicemacros.pl",
  "PGcourse.pl"
);
TEXT(beginproblem());

Context("Numeric");

#wordbank contains a word with three unique letters, and then the total number of letters, the number of most frequent letter, second most frequent.
$n = random(10,30,1);
$k = random(5,$n-3,1);
$end = Compute($n-$k);

$j = random(2,$k-1,1);
$n2 = Compute($n-$j-1);
$k2 = Compute($k-$j);
@a = ($n-$k-1..$n-$k-1+$k);
$k_1 = $k-1;

$expression = "\(\binom{$n}{$k}\)";

$mc = new_multiple_choice();
$mc -> qa ("Which question(s) about lattice paths have $expression as their answer?$BR Select all that apply.",
"How many lattice paths are there from \((0,0)\) to \(($k,$end)\)?$BR"
);
$mc -> extra(
    "How many lattice paths are there from \((0,0)\) to \(($n,$k)\)?$BR",
    "How many lattice paths are there from \((0,0)\) to \(($k,$n)\)?$BR",
    "How many lattice paths are there from \(($k,$k)\) to \(($n,$n)\)?$BR",
    "How many lattice paths are there from \((0,0)\) to \(($n,$n)\) pass through \(($k,$k)\)?$BR",
);


$mc2 = new_multiple_choice();
$mc2 -> qa ("If we answered the counting question by cases, one of those cases would count how many of the paths travel exactly $j steps to the right before turning up.  How many of the paths does this case account for?",
"\(\binom{$n2}{$k2}\)$BR",
);
$mc2 -> extra(
  "\(\binom{$n}{$j}\)$BR",
  "\(\binom{$k}{$j}\)$BR",
  "\(\frac{1}{$j}\binom{$n}{$k}\)$BR",
  "\(\binom{$n2}{$k2}\binom{$k2}{$j}\)$BR",
);

$mc3 = new_multiple_choice();
$mc3 -> qa ("If we consider all possible cases of this sort, what binomial identity will be get?",
"\(\binom{$a[0]}{0} + \binom{$a[1]}{1}+ \binom{$a[2]}{2}+\cdots+\binom{$a[$k_1]}{$k_1} +\binom{$a[$k]}{$k} = \binom{$n}{$k}\)$BR",
);
$mc3 -> extra(
  "\(\binom{$a[0]}{$k_1} + \binom{$a[1]}{$k_1}+ \binom{$a[2]}{$k_1}+\cdots+\binom{$a[$k_1]}{$k_1} +\binom{$a[$k]}{$k_1} = \binom{$n}{$k}\)$BR",
  "\(\binom{$a[$k_1]}{0} + \binom{$a[$k_1]}{1}+ \binom{$a[$k_1]}{2}+\cdots+\binom{$a[$k_1]}{$k_1} +\binom{$a[$k_1]}{$k} = \binom{$n}{$k}\)$BR",
  "\(\binom{$n}{$a[0]}\binom{$a[0]}{$j} + \binom{$n}{$a[1]}\binom{$a[1]}{$j}+\binom{$n}{$a[2]}\binom{$a[2]}{$j} +\cdots+\binom{$n}{$a[$k_1]}\binom{$a[$k_1]}{$j} = \binom{$n}{$k}\)$BR",
);

BEGIN_PGML

[@  $mc  ->  print_q()  @]*
[@  $mc  ->  print_a()  @]*

 
[@  $mc2  ->  print_q()  @]*
[@  $mc2  ->  print_a()  @]*
 
[@  $mc3  ->  print_q()  @]*
[@  $mc3  ->  print_a()  @]*

END_PGML

install_problem_grader(~~&std_problem_grader);

$showPartialCorrectAnswers = 0;

ANS( 
  radio_cmp( $mc->correct_ans() ),
  radio_cmp( $mc2->correct_ans() ), 
  radio_cmp( $mc3->correct_ans() ), 
  );

ENDDOCUMENT();